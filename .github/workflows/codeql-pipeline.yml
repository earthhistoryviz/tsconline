name: CodeQL Pipeline

on:
  pull_request:
    branches:
      - pipeline-test

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
      packages: read
      issues: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: javascript-typescript
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Install jq
        run: sudo apt-get install jq 
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"
      - name: Query CodeQL Alerts
        id: codeql-alerts
        run: |
          pr_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          owner=$(jq --raw-output .repository.owner.login "$GITHUB_EVENT_PATH")
          repo=$(jq --raw-output .repository.name "$GITHUB_EVENT_PATH")

          echo "PR Number: $pr_number"
          echo "Owner: $owner"
          echo "Repo: $repo"

          alerts_url="https://api.github.com/repos/$owner/$repo/code-scanning/alerts?ref=refs/pull/$pr_number/merge"

          alerts=$(curl -s -H "Accept: application/vnd.github.v3+json" \
                       -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                       "$alerts_url")

          readable_alerts=$(echo "$alerts" | jq -r --arg owner "$owner" --arg repo "$repo" '
            .[] |
            "\n\n\(.rule.id): \(.rule.description)\n" +
            "- Severity: \(.rule.security_severity_level)\n" +
            "- Message: \(.most_recent_instance.message.text)\n" +
            "- Located in \(.most_recent_instance.location.path) at line \(.most_recent_instance.location.start_line)\n" +
            "- URL: https://github.com/\($owner)/\($repo)/security/code-scanning/\(.number)"
          ')
          echo $readable_alerts >> alerts.txt

          if [[ $alerts != "[]" ]]; then
            echo "CodeQL alerts found."
            echo "alerts_found=true" >> $GITHUB_ENV
          else
            echo "No CodeQL alerts found."
            echo "alerts_found=false" >> $GITHUB_ENV
          fi

      - name: Comment if Alerts Found
        if: env.alerts_found == 'true'
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const alerts = fs.readFileSync('alerts.txt', 'utf8');
            const message = `ðŸš¨ The CodeQL analysis found some issues. Please address the following alerts:\n\n\`\`\`\n%{alerts}\n\`\`\``;
            const prNumber = context.payload.pull_request.number;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: message,
            }).then(() => {
              console.log('Commented on PR with CodeQL alerts.');
            }).catch((error) => {
              core.setFailed(`Error creating comment: ${error}`);
            })
            core.setFailed('CodeQL alerts found.');
      