name: Merge Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened] # Runs on opening a pr, pushing to a pr, and reopening a pr
    branches:
      - main

jobs:
  check-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 

      - name: Fetch specific branch
        run: git fetch origin main:main 

      - name: Check for disallowed files and directories
        run: |
          if git diff --name-only main...HEAD | grep -E 'node_modules/'; then
            echo "node_modules folder detected, please remove" > disallowed_files.txt
          fi
          if git diff --name-only main...HEAD | grep -E 'uploads/'; then
            echo "uploads folder detected, please remove" > disallowed_files.txt
          fi
          if git diff --name-only main...HEAD | grep 'file_metadata.json'; then
            echo "file_metadata.json detected, please remove" >> disallowed_files.txt
          fi   
          git diff --name-only main...HEAD | grep -E '\.(dpk|mdpk|txt|map|java|jar|DS_Store|db)$' | grep -v '^server/__tests__/__data__/.*\.txt$' >> disallowed_files.txt || true
          if git diff --name-only main...HEAD | grep -E 'app/dist/|server/dist/|shared/dist'; then
            echo "dist folder detected, please remove" >> disallowed_files.txt
          fi
          if [ -s disallowed_files.txt ]; then
            echo "disallowed_files_present=true" >> $GITHUB_ENV
          fi

      - name: Comment PR on disallowed files Failure
        if: env.disallowed_files_present == 'true'
        uses: actions/github-script@v5
        with:
          script: |
            const fs = require('fs');
            const disallowed_files_output = fs.readFileSync('disallowed_files.txt', 'utf8');
            const message = `ðŸš¨ There are files in your PR you need to remove:\n\n\`\`\`\n${disallowed_files_output}\n\`\`\`\n`;
            const prNumber = context.payload.pull_request.number;
            github.rest.issues.createComment({
              ...context.repo,
              issue_number: prNumber,
              body: message,
            });
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for any failures
        if: env.disallowed_files_present == 'true'
        run: exit 1

  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Dependencies
        run: yarn install

      - name: Run ESLint
        run: yarn lint-check > eslint-output.txt || echo "eslint_failed=true" >> $GITHUB_ENV
        continue-on-error: true

      - name: Comment PR on ESLint check failure
        if: env.eslint_failed == 'true'
        uses: actions/github-script@v5
        with:
          script: |
            const fs = require('fs');
            const eslintOutput = fs.readFileSync('eslint-output.txt', 'utf8');
            const message = `ðŸš¨ The ESLint check has failed. Please address the following issues:\n\n\`\`\`\n${eslintOutput}\n\`\`\`\nRun 'yarn lint-format' locally to fix some of these issues automatically.`;
            const prNumber = context.payload.pull_request.number;
            github.rest.issues.createComment({
              ...context.repo,
              issue_number: prNumber,
              body: message,
            });
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Prettify code
        run: |
          if ! yarn prettier-check; then
            echo "prettify_failed=true" >> $GITHUB_ENV
          fi
        continue-on-error: true

      - name: Comment PR on Prettier check failure
        if: env.prettify_failed == 'true'
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ðŸš¨ The Prettier check has failed. Please run 'yarn prettier-format' locally and commit the changes.

      - name: Check for any failures
        if: env.eslint_failed == 'true' || env.prettify_failed == 'true'
        run: exit 1

  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: yarn install

      - name: Build with Vite
        run: |
          set -o pipefail
          if ! yarn build 2>&1 | tee build.log; then
            echo "build_failed=true" >> $GITHUB_ENV
          fi
        continue-on-error: true

      - name: Report Build Errors
        if: env.build_failed == 'true'
        uses: actions/github-script@v5
        with:
          script: |
            const fs = require('fs');
            const buildLog = fs.readFileSync('build.log', 'utf8');
            const prNumber = context.payload.pull_request?.number;
            if (prNumber) {
              const message = `ðŸš¨ The build has failed. Please check the build logs for more information.\n\n\`\`\`\n${buildLog}\n\`\`\``;
              github.rest.issues.createComment({
                ...context.repo,
                issue_number: prNumber,
                body: message,
              });
            }
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for any build failures
        if: env.build_failed == 'true'
        run: exit 1

      - name: Run Tests
        run: |
          set -o pipefail
          if ! yarn test-all > test_output.log 2>&1; then
              echo "test_failed=true" >> $GITHUB_ENV
              fi
        continue-on-error: true
      
      - name: Report Test Errors
        if: env.test_failed == 'true'
        uses: actions/github-script@v5
        with:
          script: |
            const fs = require('fs');
            const testLog = fs.readFileSync('test_output.log', 'utf8');
            const prNumber = context.payload.pull_request?.number;
            if (prNumber) {
              const message = `ðŸš¨ Jest tests have failed. Please check the test logs for more information.\n\n\`\`\`\n${testLog}\n\`\`\``;
              github.rest.issues.createComment({
                ...context.repo,
                issue_number: prNumber,
                body: message,
              });
            }
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for any test failures
        if: env.test_failed == 'true'
        run: exit 1